/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class app_internal_AlliancesJni */

#ifndef _Included_app_internal_AlliancesJni
#define _Included_app_internal_AlliancesJni
#ifdef __cplusplus
extern "C" {
#endif

void ensureEndsWithSlash(char **path);
char* getParentPath(const char* filePath);
// const char* copyAssetToFile(JNIEnv* env, jobject assetManager, const char* assetName, const char* outputPath);
char* jni_fileExists(const char *filePath);

/*
 * Class:     Java_app_internal_AlliancesJni_getVersion
 * Method:    getVersion
 */
JNIEXPORT jstring JNICALL Java_app_internal_AlliancesJni_getVersion(JNIEnv* env, jclass thiz);

/*
 * Class:     Java_app_internal_AlliancesJni_fileExists
 * Method:    fileExists
 */
JNIEXPORT jstring JNICALL Java_app_internal_AlliancesJni_fileExists(JNIEnv* env, jclass thiz, jstring filePath);

/*
 * Class:     Java_app_internal_AlliancesJni_transcribeAudio
 * Method:    transcribeAudio
 */
JNIEXPORT jstring JNICALL Java_app_internal_AlliancesJni_transcribeAudio(JNIEnv *env, jclass cls, jobject assetManager, jstring filePath, jfloatArray samples, jstring whLanguage, jint whDuration);

/*
 * Class:     Java_app_internal_AlliancesJni_startHTTPServer
 * Method:    startHTTPServer
 */
JNIEXPORT void JNICALL Java_app_internal_AlliancesJni_startHTTPServer(JNIEnv* env, jclass thiz, jstring publicPath, jint port);

/*
 * Class:     Java_app_internal_AlliancesJni_stopHTTPServer
 * Method:    stopHTTPServer
 */
JNIEXPORT void JNICALL Java_app_internal_AlliancesJni_stopHTTPServer(JNIEnv* env, jclass thiz);

#ifdef __cplusplus
}
#endif
#endif